---
title: "KintsuGI Report"
author: "Joe Shaw (CS20980)"
date: today
date-format: "DD/MM/YYYY"
format: pdf
fig-cap-location: top
editor: visual
---

This is the output of the kintsuGI pipeline for auditing ovarian cancer data at the North West Genomic Laboratory Hub.

```{r}
#| label: packages
#| include: FALSE

library(tidyverse)
library(janitor)

```

```{r}
#| label: load-data
#| include: FALSE

gi_csv_cleaned_orps <- read_csv(paste0(config::get("data_folderpath"),
                                       "02_cleaned/gi_csv_cleaned_orps.csv"))

gi_csv_cleaned_orpp <- read_csv(paste0(config::get("data_folderpath"),
                                       "02_cleaned/gi_csv_cleaned_orpp.csv"))

gi_glvar_joined <- read_csv(paste0(config::get("data_folderpath"),
                                   "03_joined/",
                                   "gi_glvar_joined.csv"),
                            col_types = list(
                              glvar_headline_classification = col_factor(
                                levels = c("Pathogenic",
                                                  "Likely pathogenic",
                                                  "Uncertain significance"))))

stopifnot(anyNA(gi_glvar_joined$glvar_headline_result) == FALSE)

stopifnot(anyDuplicated(gi_glvar_joined$nhsno) == 0)

glvar_tvar_joined <- read_csv(paste0(config::get("data_folderpath"),
                                   "03_joined/",
                                   "glvar_tvar_joined.csv"))

gi_tvar_joined_by_labno <- read_csv(paste0(config::get("data_folderpath"),
                                   "03_joined/",
                                   "gi_tvar_joined_by_labno.csv"),
                           col_types = list(
                              tvar_headline_classification = col_factor(
                                levels = c("Pathogenic",
                                           "Likely pathogenic",
                                           "Uncertain significance",
                                           "Not reported",
                                           NA))))

gi_tvar_joined_by_nhsno <- read_csv(paste0(config::get("data_folderpath"),
                                   "03_joined/",
                                   "gi_tvar_joined_by_nhsno.csv"),
                           col_types = list(
                              tvar_headline_classification = col_factor(
                                levels = c("Pathogenic",
                                           "Likely pathogenic",
                                           "Uncertain significance",
                                           "Not reported",
                                           NA))))

gi_tvar_joined_by_rno <- read_csv(paste0(config::get("data_folderpath"),
                                   "03_joined/",
                                   "gi_tvar_joined_by_rno.csv"),
                           col_types = list(
                              tvar_headline_classification = col_factor(
                                levels = c("Pathogenic",
                                           "Likely pathogenic",
                                           "Uncertain significance",
                                           "Not reported",
                                           NA))))


```

```{r}
#| label: tbl-gi-results
#| echo: FALSE
#| tbl-cap: "All SeqOne GI results"

tbl_gi_orps <- gi_csv_cleaned_orps |> 
  group_by(status) |> 
  summarise(n = n()) |> 
  mutate("Percentage samples (%)" = (round((n / sum(n))*100, 1))) |> 
  rename("Samples" = n)

tbl_gi_orpp <- gi_csv_cleaned_orpp |> 
  group_by(status) |> 
  summarise(n = n()) |> 
  mutate("Percent (%)" = (round((n / sum(n))*100, 1))) |> 
  rename("Patients" = n)

tbl_gi_results <- tbl_gi_orps |> 
  left_join(tbl_gi_orpp, by = "status") |> 
  rename("GI status" = status) |> 
  adorn_totals()

knitr::kable(tbl_gi_results)

knitr::kable(tbl_gi_orpp |> 
               rename("GI status" = status) |> 
               adorn_totals())

```

```{r}
#| label: tbl-gi-glvar-all-results
#| tbl-cap: "Patients with GI and germline variant results"
#| echo: FALSE

glvar_all_results <- gi_glvar_joined |> 
  group_by(data_source) |> 
  count() |> 
  rename("Joined by NHS number" = n,
         "NGS result data source" = data_source) |> 
  adorn_totals()

knitr::kable(glvar_all_results)

```

```{r}
#| label: tbl-gi-tvar-all-results
#| tbl-cap: "Patients with GI and tumour variant results"
#| echo: FALSE

tvar_labno_all_results <- gi_tvar_joined_by_labno |> 
  group_by(data_source) |> 
  count() |> 
  rename("Joined by DNA number" = n)

tvar_nhsno_all_results <- gi_tvar_joined_by_nhsno |> 
  group_by(data_source) |> 
  count() |> 
  rename("Joined by NHS number" = n)

tvar_rno_all_results <- gi_tvar_joined_by_rno |> 
  group_by(data_source) |> 
  count() |> 
  rename("Joined by R number" = n)

tvar_all_results <- tvar_labno_all_results |> 
  inner_join(tvar_rno_all_results, by = "data_source") |> 
  inner_join(tvar_nhsno_all_results, by = "data_source") |> 
  rename("Data source" = data_source) |> 
  adorn_totals()

knitr::kable(tvar_all_results)

```

{{< pagebreak >}}

```{r}
#| label: conclusive-results
#| include: FALSE

gi_glvar_joined_conclusive <- gi_glvar_joined |> 
  filter(status != "Non-conclusive" &
           glvar_headline_result %in% c("No reportable variant(s) detected",
                                        "Reportable variant(s) detected"))

gi_tvar_joined_conclusive <- gi_tvar_joined_by_labno |> 
  filter(status != "Non-conclusive" &
           tvar_headline_result %in% c("No reportable variant(s) detected",
                                        "Reportable variant(s) detected"))

```

```{r}
#| label: tbl-gi-glvar
#| echo: FALSE
#| tbl-cap: "GI results and germline testing results"

tbl_gi_glvar <- gi_glvar_joined |>
  group_by(status, glvar_headline_result) |> 
  count() |> 
  rename("GI status" = status,
         "Germline result" = glvar_headline_result,
         "Patients" = n) |> 
  adorn_totals()

knitr::kable(tbl_gi_glvar)

```

```{r}
#| label: tbl-gi-tvar
#| tbl-cap: "GI results and tumour testing results (joined by DNA number)"
#| echo: FALSE

tbl_gi_tvar <- gi_tvar_joined_by_labno |> 
  group_by(status, tvar_headline_result) |> 
  count() |> 
  rename("Patients" = n,
         "Tumour result" = tvar_headline_result,
         "GI status" = status) |> 
  adorn_totals()

knitr::kable(tbl_gi_tvar)

```

{{< pagebreak >}}

```{r}
#| label: fig-gi-gl-results-variants
#| echo: FALSE
#| fig-cap: "GI results for patients with reportable germline variants"

variant_class_colours <- c("#FF3300",
                           "#FF9900",
                           "#CCCCCC")

gi_glvar_plot <- gi_glvar_joined_conclusive |> 
  filter(glvar_headline_result == "Reportable variant(s) detected") |> 
  ggplot(aes(x = gl_gene, y = score)) +
  geom_jitter(shape = 21, 
              size = 2,
              width = 0.1, 
              alpha = 0.8,
              aes(fill = glvar_headline_classification)) +
  theme_bw() +
  scale_fill_manual(values = variant_class_colours) +
  labs(x = "Germline gene",
       fill = "Variant classification",
       y = "SeqOne GI score")

gi_glvar_plot

```

```{r}
#| label: fig-gi-tvar-results-variants
#| include: FALSE
#| fig-cap: "GI results for patients with somatic BRCA1/2 variants"

gi_tvar_plot <- gi_tvar_joined_conclusive |> 
  filter(tvar_headline_result == "Reportable variant(s) detected") |>
  filter(tvar_gene %in% c("BRCA1","BRCA2")) |> 
  ggplot(aes(x = tvar_gene,
             y = score)) +
  geom_jitter(shape = 21, aes(fill = tvar_headline_classification),
              width = 0.2) +
  theme_bw() +
  scale_fill_manual(values = variant_class_colours) +
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  labs(x = "Tumour gene", y = "SeqOne GI score",
       fill = "Variant classification")

gi_tvar_plot

```

{{< pagebreak >}}

```{r}
#| label: tbl-gi-neg-gl-pos
#| echo: FALSE
#| tbl-cap: "GI negative samples with germline variants"

glvar_neg_gi <- gi_glvar_joined |> 
  filter(glvar_headline_result == "Reportable variant(s) detected") |> 
  filter(status != "Non-conclusive") |> 
  filter(score < 0.5) |> 
  filter(glvar_seqv1_classification %in% c("Pathogenic", "Likely pathogenic"))
  
knitr::kable(glvar_neg_gi |> 
               select(rno.x, gi_labno, surname, score, 
                      gl_gene) |> 
               mutate(score = round(score, 2)) |> 
               arrange(gl_gene))

```

{{< pagebreak >}}

```{r}
#| label: tbl-tvar-neg-gi
#| include: FALSE
#| tbl-cap: "GI negative samples with tumour BRCA variants"

tvar_neg_gi <- gi_tvar_joined_conclusive |> 
  filter(tvar_headline_result == "Reportable variant(s) detected") |>
  filter(tvar_gene %in% c("BRCA1","BRCA2")) |> 
  filter(score < 0.5) |> 
  select(surname, score, tvar_seqv1_description) |> 
               mutate(score = round(score, 2))

knitr::kable(tvar_neg_gi)

```

```{r}
#| label: glvar-vs-tvar
#| include: FALSE

glvar_tvar_brca <- glvar_tvar_joined |> 
  filter(!is.na(gl_gene) &
           glvar_seqv1_classification %in% c("Pathogenic",
                                             "Likely pathogenic") &
           tvar_headline_result == "Reportable variant(s) detected") |> 
  select(nhsno, labno.x, labno.y, rno.x, rno.y, gl_gene, glvar_seqv1_description,
         tvar_seqv1_description,
         glvar_seqv1_classification,
         tvar_seqv1_classification) 

```

```{r}
#| label: fig-gi-glvar-histogram
#| echo: FALSE
#| fig-cap: "GI score histogram stratified by germline BRCA status"

gi_glvar_histogram <- gi_glvar_joined_conclusive |> 
  filter(gl_gene %in% c("BRCA1", "BRCA2", NA)) |> 
  ggplot(aes(x = score, y = )) +
  geom_histogram(binwidth = 0.01) +
  facet_wrap(~glvar_headline_result, nrow = 2) +
  theme_bw() +
  theme(legend.position = "bottom") +
  labs(x = "SeqOne GI score", y = "Number of patients")

gi_glvar_histogram

```

```{r}
#| label: fig-gi-tvar-histogram
#| echo: FALSE
#| fig-cap: "GI score histogram stratified by tumour BRCA status"

gi_tvar_histogram <- gi_tvar_joined_conclusive |> 
  filter(tvar_gene %in% c("BRCA1", "BRCA2", NA)) |> 
  ggplot(aes(x = score, y = )) +
  geom_histogram(binwidth = 0.01) +
  facet_wrap(~tvar_headline_result, nrow = 2) +
  theme_bw() +
  theme(legend.position = "bottom") +
  labs(x = "SeqOne GI score", y = "Number of patients",
       title = "GI score and tumour BRCA1/2 results",
       fill = "")

gi_tvar_histogram

```

```{r}
#| label: gi-tvar-percent
#| echo: FALSE
#| fig-cap: "GI score versus tumour BRCA variant percentage"

gi_tvar_percent_plot <- gi_tvar_joined_conclusive |> 
  filter(tvar_gene %in% c("BRCA1", "BRCA2")) |> 
  ggplot(aes(x = tvar_seqv1_percent, y = score)) +
  geom_point(shape = 21, aes(fill = tvar_headline_classification)) +
  scale_fill_manual(values = variant_class_colours) +
  xlim(0, 100) +
  theme_bw() +
  theme(legend.position = "bottom") +
  labs(fill = "",
       x = "Tumour variant percent",
       y = "SeqOne GI score")

gi_tvar_percent_plot

```

```{r}
#| label: patients-over-time
#| echo: FALSE
#| fig-cap: "Patients tested on SeqOne service"

gi_data_sum <- gi_csv_cleaned_orpp |> 
  mutate(month = floor_date(date, unit = "month")) |> 
  group_by(month) |> 
  summarise(total = n()) |> 
  mutate(cum_total = cumsum(total))

seqone_timeplot <- ggplot(gi_data_sum, aes(x = month, y = cum_total)) +
  scale_x_datetime(date_breaks = "1 month",
                   date_labels = "%b-%Y") +
  scale_y_continuous(limits = c(0, max(gi_data_sum$cum_total)+50), 
                     breaks = seq(0, max(gi_data_sum$cum_total)+50, by = 100)) +
  geom_line() +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 45, 
                                   vjust = 0.9,
                                   hjust = 0.9)) +
  labs(x = "", y = "Cumulative patients") 

seqone_timeplot

```

```{r}
#| label: gi-score-histogram
#| echo: FALSE

safe_blue <- "#88CCEE"
safe_red <- "#CC6677"
safe_grey <- "#888888"

pooled_sd <- 0.04

gi_csv_cleaned_orpp |> 
  filter(status != "Non-conclusive") |> 
  ggplot(aes(x = score, y = )) +
  geom_histogram(binwidth = 0.01, aes(fill = status),
                 colour = "black") +
  scale_fill_manual(values = c(safe_blue, safe_red)) +
  theme_bw() +
  geom_vline(xintercept = 0.5, linetype = "dashed") +
  annotate(geom = "rect", xmin = 0.5-(2*pooled_sd), 
           xmax = 0.5+(2*pooled_sd),
           ymin = 0, ymax = 45, fill = "grey",
           alpha = 0.4) +
  coord_cartesian(ylim = c(0, 40)) +
  theme(legend.position = "bottom") +
  labs(x = "SeqOne GI score",
       y = "Patients",
       title = "Clinical service GI scores",
       fill = "GI status")

```
